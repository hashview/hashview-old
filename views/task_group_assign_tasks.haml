!!!
%html
  /https://jsfiddle.net/vigneshmoha/bbxMe/2/
  %body
    .span15
      .container
        .col-md-12
          .row
            .page-header
              - if params[:edit] == '1'
                %h1 Edit Your Assigned Tasks.
              - else
                %h1 Assign Tasks to Group: #{@task_group.name}
            .row
              .col-md-10.pull-left
                Each task will be ran once in order selected
                You can create new tasks by selecting 'tasks' in the above menu.
      %br
      %br
      .container
        .row
          .col-md-12
            .table
              %table{class: 'table table'}
                %thead
                  %tr
                    %th
                      %b Task Name
                    %th
                      %b Type
                    %th
                      %b Control
                %tbody
                  - if @task_group_tasks
                    - @task_group_tasks.each do |task|
                      %tr
                        %td
                          #{task['task_name']}
                        %td
                          #{task['task_type']}
                        %td
                          %a.btn.btn-success{href: "/task_groups/move_task?id=#{@task_group.id}&task_id=#{task['task_id']}&action=UP"}
                            %i.glyphicon.glyphicon-chevron-up{title: 'Move Up'}
                          %a.btn.btn-success{href: "/task_groups/move_task?id=#{@task_group.id}&task_id=#{task['task_id']}&action=DOWN"}
                            %i.glyphicon.glyphicon-chevron-down{title: 'Move Down'}
                          %a.btn.btn-danger{href: "/task_groups/remove_task?id=#{@task_group.id}&task_id=#{task['task_id']}"}
                            %i.glyphicon.glyphicon-trash{title: 'Delete'}
                        %tr
                  %tr
                    %td
                      %label.control-label{for: ''}
                      .btn-group
                        .btn.btn-default.dropdown-toggle{"data-toggle" => 'dropdown'}
                          Add Task
                          %span.caret
                        %ul.dropdown-menu.dropdown-menu-left
                          %li
                            %a{href: "#modal-create-task", "data-toggle" => 'modal'} Create New Task
                          %li.divider{role: 'separator'}
                          - @available_tasks.each do |task|
                            %li
                              %a{href: "/task_groups/assign_task?id=#{@task_group.id}&task_id=#{task['id']}"} #{task['name']}
                    %td
                    %td
      .modal.fade.modal{id: "modal-create-task", role: 'dialog', tabindex: '-1', "aria-hidden" => 'true'}
        .modal-dialog.modal-lg
          .modal-content
            .modal-header
              %button.close{'aria-label' => 'Close', 'data-dismiss' => 'modal', type: 'button'}
                %span{'aria-hidden' => 'true'} &times;
              %h4.modal-title Create a New Task
            .modal-body
              %p
                :javascript
                  function showDiv() {
                    var Index = document.taskForm.attackmode.options[document.taskForm.attackmode.selectedIndex].value
                    if(Index == "dictionary")
                    {
                      document.getElementById('dictionary_div').style.display = 'inline';
                      document.getElementById('maskmode_div').style.display = 'none';
                      document.getElementById('bruteforce_div').style.display = 'none';
                      document.getElementById('combinator_div').style.display = 'none';
                    }
                    else if(Index == "maskmode")
                    {
                      document.getElementById('dictionary_div').style.display = 'none';
                      document.getElementById('maskmode_div').style.display = 'inline';
                      document.getElementById('bruteforce_div').style.display = 'none';
                      document.getElementById('combinator_div').style.display = 'none';
                    }
                    else if(Index == "bruteforce")
                    {
                      document.getElementById('dictionary_div').style.display = 'none';
                      document.getElementById('maskmode_div').style.display = 'none';
                      document.getElementById('bruteforce_div').style.display = 'inline';
                      document.getElementById('combinator_div').style.display = 'none';
                    }
                    else if(Index == "combinator")
                    {
                      document.getElementById('dictionary_div').style.display = 'none';
                      document.getElementById('maskmode_div').style.display = 'none';
                      document.getElementById('bruteforce_div').style.display = 'none';
                      document.getElementById('combinator_div').style.display = 'inline';
                    }
                    else
                    {
                      document.getElementById('bruteforce_div').style.display = 'none';
                      document.getElementById('maskmode_div').style.display = 'none';
                      document.getElementById('bruteforce_div').style.display = 'none';
                      document.getElementById('combinator_div').style.display = 'none';
                    }
                  }
              %form{name: 'taskForm', id: 'taskForm', class: 'form-horizontal', action: '/tasks/create', method: 'post'}
                .form-group
                  %label.control-label.col-xs-2{for: ''} Task Name
                  .col-xs-10
                    %input{type: 'textbox', class: 'form-control', name: 'name', id: 'name'}
                .form-group
                  %label.control-label.col-xs-2{for: ''} Attack Mode
                  .col-xs-4
                    %select.form-control{id: 'attackmode',  name: 'attackmode', :onchange => "showDiv()"}
                      %option{value: '', name: 'attackmode', type: 'button'} Select a Mode
                      %option{value: 'dictionary', name: 'attackmode', type: 'button'} Dictionary
                      %option{value: 'maskmode', name: 'attackmode', type: 'button'} Mask Mode
                      %option{value: 'combinator', name: 'combinator', type: 'button'} Combinator
                      %option{value: 'bruteforce', name: 'attackmode', type: 'button'} Brute Force
                .section
                  %div{class: "label_leftalign field"}
                    #dictionary_div{style: 'display:none'}
                      .form-group
                        %label.control-label.col-xs-2{for: ''} Wordlist
                        .col-xs-4
                          %select.form-control{name: 'wordlist'}
                            - @wordlists.each do |wordlist|
                              %option{value: "#{wordlist.id}", name: 'wl_id', type: 'button'} #{wordlist.name} (#{wordlist.size} words)
                      .form-group
                        %label.control-label.col-xs-2{for: ''} Dictionary Rule
                        .col-xs-4
                          %select.form-control{name: 'rule'}
                            %option{value: 'none', name: 'rule', type: 'button', selected: 'selected'} None
                            - @rules.each do |rule|
                              %option{value: "#{rule.id}", name: 'rule', type: 'button'} #{rule.name}
                      .form-group
                        .col-xs-offset-2.col-xs-10
                          %button.btn.btn-primary{type: 'submit'} Create & Assign
                    #maskmode_div{style: 'display:none'}
                      .form-group
                        %label.control-label.col-xs-2{for: ''} Hashcat Mask
                        .col-xs-4
                          <input class='form-control' id='mask' name='mask' type='textbox' placeholder='i.e. ?l?u?u?u' >
                      .form-group
                        .col-xs-offset-2.col-xs-10
                          %button.btn.btn-primary{type: 'submit'} Create & Assign
                    #combinator_div{style: 'display:none'}
                      .form-group
                        %label.control-label.col-xs-2{for: ''} Wordlists (Req 2):
                        .col-xs-4
                          .table
                            %table{class: 'table table'}
                              - @wordlists.each do |wordlist|
                                %td
                                  %input.checkbox.pull-left{type: 'checkbox', name: "combinator_wordlist_#{wordlist.id}", id: "combinator_wordlist_#{wordlist.id}"}
                                %td
                                  #{wordlist.name}
                                %tr
                      .form-group
                        %label.control-label.col-xs-2{for: ''} Left Rule
                        .col-xs-4
                          <input class='form-control' id='combinator_left_rule' name='combinator_left_rule' type='textbox' placeholder=' (optional)' >
                      .form-group
                        %label.control-label.col-xs-2{for: ''} Right Rule
                        .col-xs-4
                          <input class='form-control' id='combinator_right_rule' name='combinator_right_rule' type='textbox' placeholder=' (optional)' >
                      .form-group
                        .col-xs-offset-2.col.xs-10
                          %button.btn.btn-primary{type: 'submit'} Create & Assign
                    #bruteforce_div{style: 'display:none'}
                      .form-group
                        %label.control-label.col-xs-2{for: ''} Run Time
                        .col-xs-6
                          - if @hc_settings && ! @hc_settings.max_task_time.nil?
                            #{@hc_settings.max_task_time} Seconds
                            (Set in Hashcat Global Settings)
                          - else
                            WARNING: Set max task time in Hashcat global settings.
      .container
        .row
          .col-md-12
            %a.btn.btn-primary{href: '/task_groups/list'}
              Done